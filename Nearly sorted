
    //Function to return the sorted array.  each element is at most k away from its target position, you need to sort the array optimally
    vector <int> nearlySorted(int arr[], int num, int K){
        // Your code here
        vector<int>ans;
        priority_queue<int,vector<int>,greater<int>>pq;
        
        for(int i = 0; i <= K ; i++){
            pq.push(arr[i]);
        }
       // int i = 0;
        int j = K + 1;
        while(j < num){
            int top_ele = pq.top();
            pq.pop();
           ans.push_back(top_ele);
            pq.push(arr[j++]);
        }
          while(!pq.empty())
        {
            ans.push_back(pq.top());
            pq.pop();
        }
        return ans;
        
        
    }
}

